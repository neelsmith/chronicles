import org.apache.tools.ant.filters.ReplaceTokens



apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'jetty'


apply from: "versions.gradle"

if (hasProperty('conf')) {
    System.err.print "Using conf configuration from ${conf}\n"
    File confFile = new File(conf)
    if (! confFile.exists()) {
        throw new Exception("No configuration file ${conf} found.")
    }
    apply from: conf

} else {
    File confFile = new File("conf.gradle")
    if (! confFile.exists()) {
        throw new Exception("No configuration file ${confFile} found.")
    }
    println "Using default configuration in 'conf.gradle'"
    apply from: "conf.gradle"
}



repositories {
    mavenCentral()

    // for cite libs:
    maven {
        url "http://beta.hpcc.uh.edu/nexus/content/repositories/releases"
    }
    
    // for http builder
    maven {
        url "http://repository.codehaus.org"
    }
}


dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: groovyVersion
    compile group: 'edu.harvard.chs', name : 'cite' , version: citeVersion
    testCompile group: 'junit', name: 'junit', version: junitVersion
    compile group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.5.2'

}

httpPort = 8080
stopPort = 9451
stopKey = 'foo'

group = "edu.holycross.shot"
version = "0.1.0"





task sync (type: JavaExec, dependsOn: compileGroovy) {
    description = "Generates TTL for all synchronizations in Olympiad epoch"
    main = "edu.holycross.shot.chron.Syncer"
    args = [syncTtl]

    classpath sourceSets.main.output.classesDir
    classpath configurations.runtime

}


task weight (type: JavaExec, dependsOn: compileGroovy) {
    description = "Finds weight of path through graph"
    main = "edu.holycross.shot.chron.WeightUtil"
    args = [synchGraphFile]

    classpath sourceSets.main.output.classesDir
    classpath configurations.runtime
    
}


war {
    filter(ReplaceTokens, tokens: [tripleserver : tripleserver, htmlfooter : htmlfooter , baseUrl : baseUrl, indices : indices, texts : texts ])
}			  
